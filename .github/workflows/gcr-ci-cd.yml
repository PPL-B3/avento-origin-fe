name: Cloud Run CI/CD with Versioning

on:
  push:
    branches:
      - dev
      - staging
      - main
  workflow_dispatch:

jobs:
  versioning-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Read current version
        id: read-version
        run: |
          VERSION=$(cat version.txt || echo "v0.0.0")
          echo "Current version: $VERSION"
          echo "CURRENT_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update version based on branch
        id: update-version
        run: |
          current_version="${CURRENT_VERSION}"
          major=$(echo $current_version | cut -d. -f1 | sed 's/v//')
          minor=$(echo $current_version | cut -d. -f2)
          patch=$(echo $current_version | cut -d. -f3)

          branch="${GITHUB_REF#refs/heads/}"
          echo "Branch: $branch"

          if [ "$branch" == "main" ]; then
            major=$((major + 1))
            minor=0
            patch=0
          elif [ "$branch" == "staging" ]; then
            minor=$((minor + 1))
            patch=0
          elif [ "$branch" == "dev" ]; then
            patch=$((patch + 1))
          fi

          new_version="v$major.$minor.$patch"
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
          echo "New version: $new_version"

      - name: Write new version to file
        run: |
          echo "$NEW_VERSION" > version.txt
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add version.txt
          git commit -m "Bump version to $NEW_VERSION [skip ci]"
          git push origin ${GITHUB_REF#refs/heads/}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8.15.4

      - name: Install dependencies
        run: pnpm install --ignore-scripts

      - name: Build
        run: pnpm build
        env:
          NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          LOGROCKET_ID: ${{ secrets.LOGROCKET_ID }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/avento-origin-fe:${{ env.NEW_VERSION }},${{ secrets.DOCKER_USERNAME }}/avento-origin-fe:latest
          build-args: |
            NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
            LOGROCKET_ID=${{ secrets.LOGROCKET_ID }}

      - id: 'auth'
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy to Cloud Run
        run: |
          environment="${GITHUB_REF#refs/heads/}"
          service_name="avento-origin-fe"

          if [ "$environment" == "dev" ]; then
            service_name="avento-origin-fe-dev"
          elif [ "$environment" == "staging" ]; then
            service_name="avento-origin-fe-staging"
          fi

          gcloud run deploy $service_name \
            --image ${{ secrets.DOCKER_USERNAME }}/avento-origin-fe:${{ env.NEW_VERSION }} \
            --platform managed \
            --region asia-southeast2 \
            --max-instances 5 \
            --memory 512Mi \
            --cpu 1 \
            --allow-unauthenticated \
            --set-env-vars=NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }},NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }},LOGROCKET_ID=${{ secrets.LOGROCKET_ID }} \
            --project ${{ secrets.GCP_PROJECT_ID }}
